/root/Codes/part3/rnn/data.py:358: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  tensor_data = torch.load(f'{input_dir}/tensor_data.pt')
tensor([[ 0.0000e+00,  1.0000e+00,  0.0000e+00,  ...,  1.0000e+00,
          0.0000e+00,  1.0000e+00],
        [ 8.4147e-01,  5.4030e-01,  6.8156e-01,  ...,  1.0000e+00,
          1.3335e-04,  1.0000e+00],
        [ 9.0930e-01, -4.1615e-01,  9.9748e-01,  ...,  1.0000e+00,
          2.6670e-04,  1.0000e+00],
        ...,
        [ 9.0179e-01, -4.3218e-01,  6.2345e-02,  ...,  9.9997e-01,
          6.1342e-03,  9.9998e-01],
        [ 1.2357e-01, -9.9234e-01, -6.3461e-01,  ...,  9.9997e-01,
          6.2675e-03,  9.9998e-01],
        [-7.6825e-01, -6.4014e-01, -9.9112e-01,  ...,  9.9996e-01,
          6.4009e-03,  9.9998e-01]])
Parameters: 1.44M
LlamaForCausalLM(
  (model): LlamaModel(
    (embed_tokens): Embedding(49, 64)
    (layers): ModuleList(
      (0-7): 8 x LlamaDecoderLayer(
        (self_attn): LlamaSdpaAttention(
          (q_proj): Linear(in_features=64, out_features=512, bias=False)
          (k_proj): Linear(in_features=64, out_features=512, bias=False)
          (v_proj): Linear(in_features=64, out_features=512, bias=False)
          (o_proj): Linear(in_features=512, out_features=64, bias=False)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (mlp): LlamaMLP(
          (gate_proj): Linear(in_features=64, out_features=256, bias=False)
          (up_proj): Linear(in_features=64, out_features=256, bias=False)
          (down_proj): Linear(in_features=256, out_features=64, bias=False)
          (act_fn): SiLU()
        )
        (input_layernorm): LlamaRMSNorm((64,), eps=1e-05)
        (post_attention_layernorm): LlamaRMSNorm((64,), eps=1e-05)
      )
    )
    (norm): LlamaRMSNorm((64,), eps=1e-05)
    (rotary_emb): LlamaRotaryEmbedding()
  )
  (lm_head): Linear(in_features=64, out_features=49, bias=False)
)
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 79/79 [00:02<00:00, 38.59it/s]
Initial | val loss: 13.343663638151146 | val acc: 0.0
start training
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 79/79 [00:01<00:00, 46.95it/s]
Traceback (most recent call last):██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏          | 75/79 [00:01<00:00, 47.09it/s]
Step 0.0 | Train loss | 13.381623268127441 | Samples 0 | Train acc: 0.0 | Val loss: 13.343663638151146 | Val acc: 0.0 | learning rate: 6.41025641025641e-07
  File "rnn/train_trans.py", line 241, in <module>
    main()
  File "rnn/train_trans.py", line 238, in main
    train(model, optimizer, scheduler, train_loader, val_loader, args)
  File "rnn/train_trans.py", line 119, in train
    wandb.log({"Step": step, "Train Loss": train_loss, "Train Accuracy": train_acc, "Validation Loss": val_loss, "Validation Accuracy": val_acc}, step=step/4)
  File "/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 451, in wrapper
    return func(self, *args, **kwargs)
  File "/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 403, in wrapper_fn
    return func(self, *args, **kwargs)
  File "/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 393, in wrapper
    return func(self, *args, **kwargs)
  File "/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 1920, in log
    self._log(data=data, step=step, commit=commit)
  File "/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 1639, in _log
    self._partial_history_callback(data, step, commit)
  File "/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 1511, in _partial_history_callback
    self._backend.interface.publish_partial_history(
  File "/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/interface/interface.py", line 646, in publish_partial_history
    partial_history.step.num = step
TypeError: 'float' object cannot be interpreted as an integer
